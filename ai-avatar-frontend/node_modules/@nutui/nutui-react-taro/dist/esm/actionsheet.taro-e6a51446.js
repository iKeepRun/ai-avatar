import React__default from 'react';
import { P as Popup } from './popup.taro-01676bff.js';
import { c as cn } from './bem-350c1702.js';

const defaultProps = {
    cancelTxt: '',
    optionTag: 'name',
    optionSubTag: 'subname',
    chooseTagValue: '',
    title: '',
    color: '#ee0a24',
    description: '',
    menuItems: [],
    onCancel: () => { },
    onChoose: () => { },
    visible: false,
    className: '',
    style: {},
};
const ActionSheet = (props) => {
    const { children, cancelTxt, optionTag, optionSubTag, chooseTagValue, title, color, description, menuItems, onCancel, onChoose, visible, className, style, ...rest } = { ...defaultProps, ...props };
    const b = cn('actionsheet');
    const isHighlight = (item) => {
        return props.chooseTagValue &&
            props.chooseTagValue === item[props.optionTag || 'name']
            ? props.color
            : '#1a1a1a';
    };
    const cancelActionSheet = () => {
        onCancel && onCancel();
    };
    const chooseItem = (item, index) => {
        if (!item.disable) {
            onChoose && onChoose(item, index);
        }
    };
    return (React__default.createElement(Popup, { round: true, visible: visible, position: "bottom", onClose: () => {
            onCancel && onCancel();
        } },
        React__default.createElement("div", { className: `${b()} ${className}`, style: style, ...rest },
            title && React__default.createElement("div", { className: b('title') }, title),
            description && (React__default.createElement("div", { className: `${b('item')} desc` }, description)),
            menuItems.length ? (React__default.createElement("div", { className: b('menu') }, menuItems.map((item, index) => {
                return (React__default.createElement("div", { className: `${b('item')} ${item.disable ? b('item-disabled') : ''}`, style: { color: isHighlight(item) }, key: index, onClick: () => chooseItem(item, index) },
                    item[optionTag],
                    React__default.createElement("div", { className: "subdesc" }, item[optionSubTag])));
            }))) : (children),
            cancelTxt && (React__default.createElement("div", { className: b('cancel'), onClick: () => cancelActionSheet() }, cancelTxt)))));
};
ActionSheet.defaultProps = defaultProps;
ActionSheet.displayName = 'NutActionSheet';

export { ActionSheet as A };
