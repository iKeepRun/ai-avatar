import React__default, { createContext, useContext, useMemo } from 'react';
import kebabCase from 'lodash.kebabcase';
import { z as zhCN } from './zh-CN-c779e6c1.js';

const defaultProps = {
    locale: zhCN,
};
const defaultConfigRef = {
    current: {
        locale: zhCN,
    },
};
const getDefaultConfig = () => {
    return defaultConfigRef.current;
};
// 创建一个 Context 对象
const ConfigContext = createContext(null);
const useConfig = () => {
    return useContext(ConfigContext) ?? getDefaultConfig();
};
function convertThemeVarsToCSSVars(themeVars) {
    const cssVars = {};
    Object.keys(themeVars).forEach((key) => {
        cssVars[`--${kebabCase(key)}`] = themeVars[key];
    });
    return cssVars;
}
const ConfigProvider = (props) => {
    const { children, ...config } = { ...defaultProps, ...props };
    const parentConfig = useConfig();
    const theme = config.theme || {};
    const style = useMemo(() => convertThemeVarsToCSSVars(theme), [theme]);
    return (React__default.createElement(ConfigContext.Provider, { value: {
            ...parentConfig,
            ...config,
        } },
        React__default.createElement("div", { style: style }, children)));
};
ConfigProvider.defaultProps = defaultProps;
ConfigProvider.displayName = 'NutConfigProvider';

export { ConfigProvider as C, useConfig as u };
