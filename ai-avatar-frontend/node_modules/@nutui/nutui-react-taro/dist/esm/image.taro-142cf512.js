import React__default, { useState, useEffect } from 'react';
import { u as useConfig } from './configprovider.taro-8d71eb49.js';
import { I as Icon } from './icon.taro-296a1bec.js';

const defaultProps = {
    fit: 'fill',
    position: 'center',
    alt: '',
    width: 'center',
    height: '',
    round: false,
    showError: true,
    showLoading: true,
};
const Image = (props) => {
    useConfig();
    const { children, className, style, src, fit, position, alt, width, height, round, radius, showError, showLoading, slotError, slotLoding, onClick, onLoad, onError, } = { ...defaultProps, ...props };
    const [loading, setLoading] = useState(true);
    const [isError, setIsError] = useState(false);
    useEffect(() => {
        if (src) {
            setIsError(false);
            setLoading(true);
        }
    }, [src]);
    // 图片加载
    const load = () => {
        setLoading(false);
        onLoad && onLoad();
    };
    // 图片加载失败
    const error = () => {
        setIsError(true);
        setLoading(false);
        onError && onError();
    };
    const pxCheck = (value) => {
        return Number.isNaN(Number(value)) ? String(value) : `${value}px`;
    };
    const stylebox = {
        height: height ? pxCheck(height) : '',
        width: width ? pxCheck(width) : '',
        overflow: radius !== undefined && radius !== null ? 'hidden' : '',
        borderRadius: radius !== undefined && radius !== null ? pxCheck(radius) : '',
    };
    const styles = {
        objectFit: fit,
        objectPosition: position,
        ...style,
    };
    const imageClick = (event) => {
        onClick && onClick(event);
    };
    return (React__default.createElement("div", { className: `nut-image ${round ? 'nut-image-round' : ''}`, style: stylebox, onClick: (e) => {
            imageClick(e);
        } },
        React__default.createElement("img", { className: "nut-img", style: styles, src: src, alt: alt, onLoad: load, onError: error }),
        showLoading && loading ? (React__default.createElement("div", { className: "nut-img-loading" }, slotLoding || children || React__default.createElement(Icon, { name: "image" }))) : null,
        showError && isError && !loading ? (React__default.createElement("div", { className: "nut-img-error" }, slotError || children || React__default.createElement(Icon, { name: "image-error" }))) : null));
};
Image.defaultProps = defaultProps;
Image.displayName = 'NutImage';

export { Image as I };
