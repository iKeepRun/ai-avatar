import React__default from 'react';
import classNames from 'classnames';
import { I as Icon } from './icon.taro-296a1bec.js';
import { c as cn } from './bem-350c1702.js';
import { C as ComponentDefaults } from './typings-b9828dba.js';

const defaultProps = {
    ...ComponentDefaults,
    title: '',
    desc: '',
    leftShow: true,
    titIcon: '',
    className: '',
    leftText: '',
    fixed: false,
    safeAreaInsetTop: false,
    border: false,
    placeholder: false,
    zIndex: 10,
    style: {},
};
const NavBar = (props) => {
    const { desc, title, titIcon, leftShow, className, style, leftText, fixed, safeAreaInsetTop, border, placeholder, zIndex, onClickTitle, onClickIcon, onClickBack, onClickRight, iconClassPrefix, iconFontClassName, } = {
        ...defaultProps,
        ...props,
    };
    const b = cn('navbar');
    const children = Array.isArray(props.children)
        ? props.children
        : [props.children];
    const slot = children.reduce((slot, item) => {
        const data = slot;
        if (item && item.props) {
            data[item.props.slot] = item;
        }
        return data;
    }, {});
    const styles = () => {
        return {
            ...style,
            zIndex,
        };
    };
    const renderLeft = () => {
        return (React__default.createElement("div", { className: `${b('left')}`, onClick: (e) => onClickBack(e) },
            leftShow && (React__default.createElement(Icon, { classPrefix: iconClassPrefix, fontClassName: iconFontClassName, name: "left", color: "#979797" })),
            leftText && React__default.createElement("div", { className: `${b('text')}` }, leftText),
            slot.left));
    };
    const renderContent = () => {
        return (React__default.createElement("div", { className: `${b('title')}` },
            title && (React__default.createElement("div", { className: "title", onClick: (e) => onClickTitle(e) }, title)),
            titIcon && (React__default.createElement("div", { onClick: (e) => onClickIcon(e) },
                React__default.createElement(Icon, { classPrefix: iconClassPrefix, fontClassName: iconFontClassName, name: titIcon }))),
            slot.content));
    };
    const renderRight = () => {
        return (React__default.createElement("div", { className: `${b('right')}`, onClick: (e) => onClickRight(e) },
            desc && React__default.createElement("div", { className: `${b('text')}` }, desc),
            slot.right));
    };
    const renderWrapper = () => {
        return (React__default.createElement("div", { className: cls, style: styles() },
            renderLeft(),
            renderContent(),
            renderRight()));
    };
    const classes = classNames({
        [`nut-navbar--border`]: border,
        [`nut-navbar--fixed`]: fixed,
        [`nut-navbar--safe-area-inset-top`]: safeAreaInsetTop,
    });
    const cls = classNames(b(''), classes, className);
    return (React__default.createElement(React__default.Fragment, null, fixed && placeholder ? (React__default.createElement("div", { className: `${b('')}--placeholder` }, renderWrapper())) : (renderWrapper())));
};
NavBar.defaultProps = defaultProps;
NavBar.displayName = 'NutNavBar';

export { NavBar as N };
