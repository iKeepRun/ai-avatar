import React__default, { useState, useEffect } from 'react';
import classNames from 'classnames';
import { CSSTransition } from 'react-transition-group';
import { c as cn } from './bem-350c1702.js';

const defaultProps = {
    id: '',
    msg: '',
    color: '',
    duration: 3000,
    type: 'danger',
    className: '',
    background: '',
    position: 'top',
    isWrapTeleport: true,
    visible: false,
    onClosed: () => { },
    onClick: () => { },
};
const Notify = (props) => {
    const { id, children, style, msg, color, background, type, className, position, isWrapTeleport, visible, duration, onClosed, onClick, ...rest } = { ...defaultProps, ...props };
    let timer;
    const [showNotify, SetShow] = useState(false);
    useEffect(() => {
        if (visible) {
            SetShow(true);
            show();
        }
        else {
            hide();
        }
    }, [visible]);
    const clickHandle = () => {
        onClick();
    };
    const show = () => {
        clearTimer();
        if (duration) {
            timer = window.setTimeout(() => {
                hide();
            }, duration);
        }
    };
    const clearTimer = () => {
        if (timer) {
            clearTimeout(timer);
            timer = null;
        }
    };
    const hide = () => {
        SetShow(false);
        if (id) {
            const element = document.getElementById(id);
            element && element.parentNode && element.parentNode.removeChild(element);
        }
        onClosed();
    };
    cn('notify');
    const classes = classNames({
        'nut-notify--popup-top': position === 'top',
        'nut-notify--popup-bottom': position === 'bottom',
        'nut-notify': true,
        [`nut-notify--${type}`]: true,
    });
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(CSSTransition, { in: showNotify, timeout: 300, classNames: "fade", unmountOnExit: true, appear: true, position: position, id: id },
            React__default.createElement("div", { className: `${classes} ${className}`, style: {
                    color: `${color || ''}`,
                    background: `${background || ''}`,
                }, onClick: clickHandle }, children || msg))));
};
Notify.defaultProps = defaultProps;
Notify.displayName = 'NutNotify';

export { Notify as N };
