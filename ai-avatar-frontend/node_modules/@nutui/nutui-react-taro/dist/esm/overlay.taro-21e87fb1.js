import React__default, { useState, useRef, useEffect } from 'react';
import classNames from 'classnames';
import { c as cn } from './bem-350c1702.js';
import { View } from '@tarojs/components';

const defaultOverlayProps = {
    zIndex: 2000,
    duration: 0.3,
    overlayClass: '',
    closeOnClickOverlay: true,
    visible: false,
    lockScroll: true,
    overlayStyle: {},
};
const Overlay = (props) => {
    const { children, zIndex, duration, overlayClass, closeOnClickOverlay, visible, lockScroll, overlayStyle, onClick, ...rest } = {
        ...defaultOverlayProps,
        ...props,
    };
    const [show, setShow] = useState(visible);
    const renderRef = useRef(true);
    const intervalRef = useRef(0);
    useEffect(() => {
        visible && setShow(visible);
        lock();
    }, [visible]);
    useEffect(() => {
        return () => {
            clearTimeout(intervalRef.current);
            document.body.classList.remove('nut-overflow-hidden');
        };
    }, []);
    const b = cn('overlay');
    const classes = classNames({
        'overlay-fade-leave-active': !renderRef.current && !visible,
        'overlay-fade-enter-active': visible,
        'first-render': renderRef.current && !visible,
        'hidden-render': !visible,
    }, overlayClass, b(''));
    const styles = {
        zIndex,
        animationDuration: `${props.duration}s`,
        ...overlayStyle,
    };
    const lock = () => {
        if (lockScroll && visible) {
            document.body.classList.add('nut-overflow-hidden');
        }
        else {
            document.body.classList.remove('nut-overflow-hidden');
        }
    };
    const handleClick = (event) => {
        if (closeOnClickOverlay) {
            onClick && onClick(event);
            renderRef.current = false;
            const id = window.setTimeout(() => {
                setShow(!visible);
            }, duration * 1000 * 0.8);
            intervalRef.current = id;
        }
    };
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(View, { className: classes, style: styles, ...rest, catchMove: lockScroll, onClick: handleClick }, children)));
};
Overlay.defaultProps = defaultOverlayProps;
Overlay.displayName = 'NutOverlay';

export { Overlay as O, defaultOverlayProps as d };
