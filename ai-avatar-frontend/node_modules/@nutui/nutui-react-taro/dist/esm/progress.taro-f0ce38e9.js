import React__default from 'react';
import classNames from 'classnames';
import { I as Icon } from './icon.taro-296a1bec.js';
import { c as cn } from './bem-350c1702.js';
import { C as ComponentDefaults } from './typings-b9828dba.js';

const defaultProps = {
    ...ComponentDefaults,
    className: '',
    style: {},
    isShowPercentage: true,
    percentage: 0,
    fillColor: '#f3f3f3',
    strokeColor: 'linear-gradient(135deg, #fa2c19 0%, #fa6419 100%)',
    strokeWidth: '',
    textColor: '',
    textWidth: '',
    showText: true,
    textInside: false,
    textBackground: 'linear-gradient(135deg, #fa2c19 0%, #fa6419 100%)',
    textType: 'text',
    status: false,
    iconName: 'checked',
    iconColor: '#439422',
    iconSize: '16px',
    children: undefined,
};
const Progress = (props) => {
    const { className, style, isShowPercentage, percentage, fillColor, strokeColor, strokeWidth, size, textColor, textWidth, showText, textInside, textBackground, textType, status, iconName, iconColor, iconSize, children, iconClassPrefix, iconFontClassName, ...rest } = {
        ...defaultProps,
        ...props,
    };
    const b = cn('progress');
    const classes = classNames(b(''));
    const classesOuter = classNames({
        [`${b('')}-outer`]: true,
        [`${b('')}-${size || 'base'}`]: true,
    });
    const classesInner = classNames({
        [`${b('')}-inner`]: true,
        [`${b('')}-active`]: status,
    });
    const classesText = classNames({
        [`${b('')}-text`]: true,
    });
    const classesInsideText = classNames({
        [`${b('')}-text`]: true,
        [`${b('')}-insidetext`]: true,
    });
    const classesTextInner = classNames({
        [`${b('')}-text__inner`]: true,
    });
    const stylesOuter = {
        height: `${strokeWidth}px`,
        // eslint-disable-next-line no-nested-ternary
        background: `${fillColor}`,
    };
    const stylesInner = {
        width: `${percentage}%`,
        // eslint-disable-next-line no-nested-ternary
        background: `${strokeColor}`,
    };
    const stylesInsideText = {
        width: `${textWidth}px`,
        left: `${percentage}%`,
        background: textBackground || strokeColor,
    };
    const stylesInsideIcon = {
        width: `${textWidth}px`,
        left: `${percentage}%`,
    };
    const stylesText = {
        width: `${textWidth}px`,
    };
    return (React__default.createElement("div", { className: `${classes} ${className}`, style: style, ...rest },
        React__default.createElement("div", { className: classesOuter, style: stylesOuter },
            React__default.createElement("div", { className: classesInner, style: stylesInner }, showText && textInside && (React__default.createElement(React__default.Fragment, null, children ? (React__default.createElement("div", { className: classesInsideText, style: stylesInsideIcon }, children)) : (React__default.createElement("div", { className: classesInsideText, style: stylesInsideText },
                React__default.createElement("span", { className: classesTextInner, style: { color: textColor } },
                    percentage,
                    isShowPercentage ? '%' : ''))))))),
        showText && !textInside && (React__default.createElement("div", { className: classesText, style: stylesText },
            textType === 'text' && (React__default.createElement("span", { className: classesTextInner, style: { color: textColor } },
                percentage,
                isShowPercentage ? '%' : '')),
            textType === 'icon' && (React__default.createElement(Icon, { classPrefix: iconClassPrefix, fontClassName: iconFontClassName, size: iconSize, name: iconName, color: iconColor }))))));
};
Progress.defaultProps = defaultProps;
Progress.displayName = 'NutProgress';

export { Progress as P };
