import React__default, { useContext } from 'react';
import classNames from 'classnames';
import { D as DataContext } from './UserContext-e402e1a6.js';
import { c as cn } from './bem-350c1702.js';
import { I as Icon } from './icon.taro-296a1bec.js';
import { C as ComponentDefaults } from './typings-b9828dba.js';

const defaultProps = {
    ...ComponentDefaults,
    title: '',
    content: '',
    activeIndex: 0,
    icon: '',
    iconColor: '',
    size: '12px',
};
const Step = (props) => {
    const { children, title, content, activeIndex, icon, iconColor, size, className, renderContent, iconClassPrefix, iconFontClassName, ...restProps } = {
        ...defaultProps,
        ...props,
    };
    const parent = useContext(DataContext);
    const dot = parent.propSteps.progressDot;
    const getCurrentStatus = () => {
        const index = activeIndex;
        if (index < +parent.propSteps.current)
            return 'finish';
        return index === +parent.propSteps.current ? 'process' : 'wait';
    };
    const handleClickStep = () => {
        parent.propSteps?.onClickStep && parent.propSteps?.onClickStep(activeIndex);
        parent.propSteps?.clickStep && parent.propSteps?.clickStep(activeIndex);
    };
    const b = cn('step');
    const classes = classNames({
        [`${b('')}-${getCurrentStatus()}`]: true,
    }, className, b(''));
    const renderIconClass = () => {
        if (!dot && icon) {
            return 'nut-step-icon is-icon';
        }
        if (!dot && !icon) {
            return 'nut-step-icon is-text';
        }
        return 'nut-step-icon';
    };
    return (React__default.createElement("div", { className: classes, ...restProps, onClick: handleClickStep },
        React__default.createElement("div", { className: "nut-step-head" },
            React__default.createElement("div", { className: "nut-step-line" }),
            React__default.createElement("div", { className: renderIconClass() }, icon ? (React__default.createElement(Icon, { classPrefix: iconClassPrefix, fontClassName: iconFontClassName, className: "nut-step-icon-inner", color: iconColor, name: icon, size: size })) : (!dot && React__default.createElement("span", { className: "nut-step-inner" }, activeIndex)))),
        React__default.createElement("div", { className: "nut-step-main" },
            React__default.createElement("span", { className: "nut-step-title" }, title),
            content && React__default.createElement("span", { className: "nut-step-content" }, content),
            renderContent && (React__default.createElement("span", { className: "nut-step-content" }, renderContent())))));
};
Step.defaultProps = defaultProps;
Step.displayName = 'NutStep';

export { Step as S };
