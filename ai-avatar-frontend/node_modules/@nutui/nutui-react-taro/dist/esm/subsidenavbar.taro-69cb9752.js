import React__default, { useState, useContext, useRef, useCallback, useEffect } from 'react';
import { O as OffsetContext } from './offsetContext-c2a746fa.js';

const defaultProps = {
    open: true,
};
const SubSideNavBar = (props) => {
    const { title, ikey, children, onClick, open, ...rest } = {
        ...defaultProps,
        ...props,
    };
    const [subShow, setSubShow] = useState(open);
    const offset = useContext(OffsetContext);
    const listRef = useRef(null);
    const setListLevel = useCallback((nodeList, level = 1) => {
        const titleClass = nodeList[0].className;
        if (titleClass.includes('nut-subsidenavbar__title')) {
            const left = offset * (level + 1);
            nodeList[0].style.paddingLeft = `${left}px`;
        }
        const childNodes = nodeList[1] &&
            nodeList[1].children &&
            Array.from(nodeList[1].children).filter((item) => item.nodeType !== 3 && item.nodeType !== 8);
        childNodes.forEach((item) => {
            const itemClass = item.className;
            if (itemClass.includes('nut-subsidenavbar__item')) {
                const left = offset * (level + 2);
                item.style.paddingLeft = `${left}px`;
            }
            if (itemClass.includes('nut-subsidenavbar__list')) {
                let level = item.getAttribute('level')
                    ? Number(item.getAttribute('level'))
                    : 1;
                level += 1;
                item.setAttribute('level', level.toString());
                item.children && setListLevel(item.children, level);
            }
        });
    }, [offset]);
    const clickFn = (e) => {
        e.stopPropagation();
        setSubShow(!subShow);
        const isShow = !subShow;
        onClick && onClick({ title, ikey, isShow });
    };
    useEffect(() => {
        const childNodes = listRef.current?.children;
        listRef.current?.setAttribute('level', '1');
        childNodes && setListLevel(childNodes);
    }, [setListLevel]);
    const divClass = subShow
        ? 'nut-subsidenavbar__list  nutShow'
        : 'nut-subsidenavbar__list  nutHide';
    const iconClass = subShow ? 'arrow-icon arrow-down' : 'arrow-icon arrow-up';
    return (React__default.createElement("div", { className: divClass, ref: listRef, onClick: clickFn, ...rest },
        React__default.createElement("div", { className: "nut-subsidenavbar__title border-bt" },
            title,
            " ",
            React__default.createElement("i", { className: iconClass })),
        React__default.createElement("div", { className: "nut-subsidenavbar__content" }, children)));
};

export { SubSideNavBar as S };
