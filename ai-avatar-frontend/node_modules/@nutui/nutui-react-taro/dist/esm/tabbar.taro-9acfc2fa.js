import React__default, { useState, useEffect } from 'react';
import { c as cn } from './bem-350c1702.js';

const defaultProps = {
    visible: 0,
    bottom: false,
    size: 20,
    unactiveColor: '',
    activeColor: '',
    safeAreaInsetBottom: false,
    className: '',
    style: {},
    onSwitch: (child, activeVisible) => { },
};
const Tabbar = (props) => {
    const { children, visible, activeVisible, bottom, size, activeColor, unactiveColor, safeAreaInsetBottom, className, style, onSwitch, } = {
        ...defaultProps,
        ...props,
    };
    const b = cn('tabbar');
    const [selectIndex, setSelectIndex] = useState(activeVisible || visible);
    const handleClick = (idx) => {
        if (!('activeVisible' in props)) {
            setSelectIndex(idx);
        }
    };
    useEffect(() => {
        if (activeVisible !== undefined) {
            setSelectIndex(activeVisible);
        }
    }, [activeVisible]);
    return (React__default.createElement("div", { className: [
            `${b()}`,
            bottom ? `${b('bottom')}` : '',
            safeAreaInsetBottom ? `${b('bottom')} ${b('safebottom')}` : '',
            className,
        ].join(' '), style: style }, React__default.Children.map(children, (child, idx) => {
        if (!React__default.isValidElement(child)) {
            return null;
        }
        const childProps = {
            ...child.props,
            active: idx === selectIndex,
            index: idx,
            unactiveColor,
            activeColor,
            size,
            handleClick: () => {
                handleClick(idx);
                onSwitch(child, idx);
            },
        };
        return React__default.cloneElement(child, childProps);
    })));
};
Tabbar.defaultProps = defaultProps;
Tabbar.displayName = 'NutTabbar';

export { Tabbar as T };
