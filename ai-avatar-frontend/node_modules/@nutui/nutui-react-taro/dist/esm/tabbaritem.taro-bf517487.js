import React__default, { useEffect } from 'react';
import Taro from '@tarojs/taro';
import { c as cn } from './bem-350c1702.js';
import { I as Icon } from './icon.taro-296a1bec.js';
import { C as ComponentDefaults } from './typings-b9828dba.js';

const defaultProps = {
    ...ComponentDefaults,
    dot: false,
    size: '',
    iconSize: '',
    className: '',
    tabTitle: '',
    icon: '',
    href: '',
    to: '',
    num: '',
    active: false,
    activeColor: '',
    unactiveColor: '',
    index: 0,
    handleClick: (idx) => { },
};
const TabbarItem = (props) => {
    const { dot, size, iconSize, className, style, tabTitle, icon, href, to, num, active, activeColor, unactiveColor, index, handleClick, iconClassPrefix, iconFontClassName, } = {
        ...defaultProps,
        ...props,
    };
    const b = cn('tabbar-item');
    const bIcon = cn('tabbar-item__icon-box');
    useEffect(() => {
        if (active && href) {
            window.location.href = href;
            return;
        }
        if (active && to) {
            Taro.navigateTo({
                url: to,
            });
        }
    }, [active, href, to]);
    return (React__default.createElement("div", { className: `${b({ active })} ${className}`, style: {
            ...style,
            color: active ? activeColor : unactiveColor,
        }, onClick: () => {
            handleClick(index);
        } },
        React__default.createElement("div", { className: `${bIcon()}` },
            !dot ? (React__default.createElement(React__default.Fragment, null,
                num && num <= 99 && (React__default.createElement("div", { className: `${bIcon('tips', [bIcon('num')])}` }, num)),
                num && num >= 100 && (React__default.createElement("div", { className: `${bIcon('tips', [bIcon('nums')])}` }, "99+")))) : (React__default.createElement("div", { className: `${bIcon('tips', [bIcon('dot')])}` })),
            icon && (React__default.createElement(Icon, { classPrefix: iconClassPrefix, fontClassName: iconFontClassName, size: iconSize || size, name: icon }))),
        tabTitle && (React__default.createElement("div", { className: bIcon({ 'nav-word': true }, [
                bIcon({ 'big-word': !icon }),
            ]) }, tabTitle))));
};

export { TabbarItem as T };
