import React__default, { useState, useEffect } from 'react';
import classNames from 'classnames';
import { c as cn } from './bem-350c1702.js';
import { I as Icon } from './icon.taro-296a1bec.js';
import { u as useConfig } from './configprovider.taro-8d71eb49.js';
import { C as ComponentDefaults } from './typings-b9828dba.js';

const defaultProps = {
    ...ComponentDefaults,
    className: '',
    style: {},
    columns: [],
    data: [],
    bordered: true,
    striped: false,
    noData: '无数据',
    showHeader: true,
};
const Table = (props) => {
    const { locale } = useConfig();
    defaultProps.noData = locale.noData;
    const { children, className, style, columns, data, bordered, summary, striped, noData, onSorter, iconClassPrefix, iconFontClassName, showHeader, ...rest } = {
        ...defaultProps,
        ...props,
    };
    const [curData, setCurData] = useState(data);
    useEffect(() => {
        if (data && String(data) !== String(curData)) {
            setCurData(data);
        }
    }, [data]);
    const b = cn('table');
    const classes = classNames({});
    const cls = classNames(b(), classes, className);
    const handleSorterClick = (item) => {
        if (item.sorter) {
            onSorter && onSorter(item, curData);
            if (typeof item.sorter === 'function') {
                setCurData(curData.sort(item.sorter));
            }
            else {
                setCurData(item.sorter === 'default' ? curData.sort() : curData);
            }
        }
    };
    const cellClasses = (item) => {
        return {
            'nut-table__main__head__tr--border': props.bordered,
            [`nut-table__main__head__tr--align${item.align ? item.align : ''}`]: true,
        };
    };
    const getColumnItem = (value) => {
        return columns.filter((item) => item.key === value)[0];
    };
    const renderHeadCells = () => {
        return columns.map((item, index) => {
            return (React__default.createElement("span", { className: classNames('nut-table__main__head__tr__th', cellClasses(item)), key: item.key, onClick: () => handleSorterClick(item) },
                item.title,
                item.sorter && (React__default.createElement(Icon, { classPrefix: iconClassPrefix, fontClassName: iconFontClassName, name: "down-arrow", size: "12px" }))));
        });
    };
    const sortDataItem = () => {
        return columns.map((columns) => {
            return [columns.key, columns.render];
        });
    };
    const renderBodyTds = (item) => {
        return sortDataItem().map(([value, render], index) => {
            return (React__default.createElement("span", { className: classNames('nut-table__main__body__tr__td', cellClasses(getColumnItem(value))), key: value }, typeof item[value] === 'function' || typeof render === 'function' ? (React__default.createElement("div", null, render ? render(item) : item[value](item))) : (item[value])));
        });
    };
    const renderBoyTrs = () => {
        return curData.map((item, index) => {
            return (React__default.createElement("div", { className: "nut-table__main__body__tr", key: index }, renderBodyTds(item)));
        });
    };
    return (React__default.createElement("div", { className: cls, style: style, ...rest },
        React__default.createElement("div", { className: classNames('nut-table__main', {
                'nut-table__main--striped': striped,
            }) },
            showHeader && (React__default.createElement("div", { className: "nut-table__main__head" },
                React__default.createElement("div", { className: "nut-table__main__head__tr" }, renderHeadCells()))),
            React__default.createElement("div", { className: "nut-table__main__body" }, renderBoyTrs())),
        summary && (React__default.createElement("div", { className: "nut-table__summary" },
            React__default.createElement("span", { className: "nut-table__summary__text" }, summary))),
        curData.length === 0 && (React__default.createElement("div", { className: "nut-table__nodata" },
            React__default.createElement("div", { className: "nut-table__nodata" },
                React__default.createElement("div", { className: "nut-table__nodata__text" }, noData))))));
};
Table.defaultProps = defaultProps;
Table.displayName = 'NutTable';

export { Table as T };
