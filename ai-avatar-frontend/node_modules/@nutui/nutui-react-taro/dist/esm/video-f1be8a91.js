import React__default, { useRef, useEffect } from 'react';
import classNames from 'classnames';
import { c as cn } from './bem-350c1702.js';

const defaultProps = {
    source: {
        type: {},
        src: '',
    },
    options: {
        controls: true,
        muted: false,
        autoplay: false,
        poster: '',
        playsinline: false,
        loop: false,
    },
};
const Video = (props) => {
    const { children, source, options, className, play, pause, playend, onPlayFuc, onPauseFuc, onPlayend, ...restProps } = {
        ...defaultProps,
        ...props,
    };
    const rootRef = useRef(null);
    const b = cn('video');
    const classes = classNames(className, b(''));
    useEffect(() => {
        init();
    }, []);
    const init = () => {
        if (rootRef.current) {
            const videoRef = rootRef.current;
            if (options.autoplay) {
                setTimeout(() => {
                    videoRef.play();
                }, 200);
            }
            if (options.playsinline) {
                videoRef.setAttribute('playsinline', String(options.playsinline));
                videoRef.setAttribute('webkit-playsinline', String(options.playsinline));
                videoRef.setAttribute('x5-video-player-type', 'h5-page');
                videoRef.setAttribute('x5-video-player-fullscreen', 'false');
            }
            videoRef.addEventListener('play', () => {
                onPlayFuc && onPlayFuc(videoRef);
                play && play(videoRef);
            });
            videoRef.addEventListener('pause', () => {
                onPauseFuc && onPauseFuc(videoRef);
                pause && pause(videoRef);
            });
            videoRef.addEventListener('ended', () => {
                videoRef.currentTime = 0;
                onPlayend && onPlayend(videoRef);
                playend && playend(videoRef);
            });
        }
    };
    return (React__default.createElement("div", { className: classes, ...restProps },
        React__default.createElement("video", { className: "nut-video-player", muted: options.muted, autoPlay: options.autoplay, loop: options.loop, poster: options.poster, controls: options.controls, ref: rootRef, src: source.src },
            React__default.createElement("source", { src: source.src, type: source.type }),
            React__default.createElement("track", { kind: "captions" }))));
};
Video.defaultProps = defaultProps;
Video.displayName = 'NutVideo';

export { Video as V };
